<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.0l7lhjb0q4v1qk1b4x5fg0pwad9p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sanja/Desktop/TSF/Task_8/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0l7lhjb0q4v1qk1b4x5fg0pwad9p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BG10001:no:A1:BG10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0l7lhjb0q4v1qk1b4x5fg0pwad9p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BG10001:no:A1:BG10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BG10001:no:A1:BG10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Months]' role='dimension' type='quantitative' user:agg-type='Month-Trunc' user:base-field='date' user:ui-builder='date-bin-builder'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;, [date]))' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_31D9FA74147641BB85173D37BE7EC8C8]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' hidden='true' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' hidden='true' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' hidden='true' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' hidden='true' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' hidden='true' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' hidden='true' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' hidden='true' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[avg:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <filter class='categorical' column='[continent]' filter-group='2'>
        <groupfilter function='member' level='[continent]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_31D9FA74147641BB85173D37BE7EC8C8'>
            <properties context=''>
              <relation connection='excel-direct.0l7lhjb0q4v1qk1b4x5fg0pwad9p' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BG10001:no:A1:BG10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average reproduction rate vs toatl cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column-instance column='[reproduction_rate]' derivation='Avg' name='[avg:reproduction_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Yemen&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]' />
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]</rows>
        <cols>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[avg:reproduction_rate:qk]</cols>
      </table>
      <simple-id uuid='{A6304004-1963-4F83-B53B-7C8489E15C95}' />
    </worksheet>
    <worksheet name='Life expexctancy '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Yemen&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]' />
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
              <lod column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[avg:life_expectancy:qk]</rows>
        <cols>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]</cols>
      </table>
      <simple-id uuid='{38FFAC23-5241-4D44-8260-EB5D217393F7}' />
    </worksheet>
    <worksheet name='Tests conducted'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Longitude (generated)]' field-type='quantitative' max='16361641.558693951' min='2318256.2893643514' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Latitude (generated)]' field-type='quantitative' max='7889470.3382978952' min='-1180753.0891963234' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
              <size column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]' />
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Latitude (generated)]</rows>
        <cols>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{98FF8331-1814-468E-B5F4-B913E421F198}' />
    </worksheet>
    <worksheet name='Vaccinaton and GDP per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Timor&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</rows>
        <cols>([federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_vaccinations:qk] + [federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:gdp_per_capita:qk])</cols>
      </table>
      <simple-id uuid='{969E8590-CA80-45F8-9322-F76B11CCE144}' />
    </worksheet>
    <worksheet name='overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_vaccinations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:continent:nk] / [federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk])</rows>
        <cols>([federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk] + ([federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk] + ([federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk] + [federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_vaccinations:qk])))</cols>
      </table>
      <simple-id uuid='{952C7B84-F29A-475C-A7E8-A6C939D0029E}' />
    </worksheet>
    <worksheet name='positive rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:positive_rate:qk]' />
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:positive_rate:qk]' />
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B699E29-6D65-469B-BFF0-83710A121D0B}' />
    </worksheet>
    <worksheet name='stringic index'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column-instance column='[stringency_index]' derivation='Avg' name='[avg:stringency_index:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Yemen&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='939' />
                <format attr='maxwidth' value='939' />
                <format attr='minheight' value='626' />
                <format attr='maxheight' value='626' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]</rows>
        <cols>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[avg:stringency_index:qk]</cols>
      </table>
      <simple-id uuid='{B0A3F908-7E53-4D98-851D-854813DDCF0A}' />
    </worksheet>
    <worksheet name='total deaths in asian continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.0u1bu7t1492sgi17qndkh1pxdqw6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u1bu7t1492sgi17qndkh1pxdqw6'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]' included-values='in-range'>
            <min>4069394</min>
            <max>42822257145</max>
          </filter>
          <slices>
            <column>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]' />
              <lod column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' />
              <color column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]' />
              <geometry column='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Latitude (generated)]</rows>
        <cols>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{39DC41C2-9D51-4295-83A0-0DE216AC83E0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Introduction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='93625' id='3' is-scaled='1' param='C:/Users/sanja/Downloads/pexels-cdc-3993212.jpg' w='100400' x='-400' y='6625' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='16500' id='4' w='101200' x='-200' y='1750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Times New Roman' fontsize='26'>Tmeline Analysis: Covid-19</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='11375' id='5' w='50500' x='48600' y='88250'>
          <formatted-text>
            <run bold='true' fontalignment='2' fontcolor='#000000' fontname='Times New Roman' fontsize='20'>Author: Sanjay Kazi</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='49000' id='6' w='85800' x='700' y='35375'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Benton Sans Book' fontsize='24'>Æ </run>
            <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='24'>Objective:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>- Identify interesting patterns and possible reasons helping Covid-19 spread with basic as well as advanced charts</run>
            <run>Æ&#10;</run>
            <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>- Use animation, timeline and annotations to create attractive and interactive dashboards and story </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='16500' id='4' w='101200' x='-200' y='1750'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Times New Roman' fontsize='26'>Tmeline Analysis: Covid-19</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='93625' id='3' is-fixed='true' is-scaled='1' param='C:/Users/sanja/Downloads/pexels-cdc-3993212.jpg' w='100400' x='-400' y='6625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='49000' id='6' w='85800' x='700' y='35375'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Benton Sans Book' fontsize='24'>Æ </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='24'>Objective:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>- Identify interesting patterns and possible reasons helping Covid-19 spread with basic as well as advanced charts</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>- Use animation, timeline and annotations to create attractive and interactive dashboards and story </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='11375' id='5' w='50500' x='48600' y='88250'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#000000' fontname='Times New Roman' fontsize='20'>Author: Sanjay Kazi</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA7120DA-6B44-41FE-80BF-A9B6ED7B8937}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Times New Roman' fontsize='26'>Timeline Analysis: Covid-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='427' />
        </style-rule>
      </style>
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='7' param='vert' removable='false' w='98546' x='727' y='941'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='7765' id='8' w='98546' x='727' y='941'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90353' id='1' param='vert' removable='false' w='98546' x='727' y='8706'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='11882' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98546' x='727' y='8706' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='78471' id='5' paired-zone-id='4' removable='false' w='98546' x='727' y='20588'>
                <flipboard active-id='12' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Introduction' captured-sheet='Introduction' id='1' />
                    <story-point caption='Positive cases in Asian countries. This shows us that Armenia has high corona positive rate.' captured-sheet='positive rate' id='4' />
                    <story-point caption='Observing the trend we easily notice that India is having highest fatality among Asian countries.' captured-sheet='overview' id='5'>
                      <capturedDeltas>
                        <worksheet name='overview'>
                          <selection-collection>
                            <node-selection select-tuples='false'>
                              <oriented-node-reference orientation='vertical'>
                                <node-reference>
                                  <fields>
                                    <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:continent:nk]</field>
                                  </fields>
                                  <multibucket>
                                    <bucket>&quot;Asia&quot;</bucket>
                                  </multibucket>
                                </node-reference>
                                <page-reference />
                              </oriented-node-reference>
                            </node-selection>
                          </selection-collection>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='This recent statistic can be ealisy visualised using map which indicates that india is worst hit country by covid-19.' captured-sheet='total deaths in asian continent' id='6' />
                    <story-point caption='Being a populous country this pandemic is hitting us even harder; we are successfully conducted many test but yet ther&apos;s miles to go.' captured-sheet='Tests conducted' id='8'>
                      <capturedDeltas>
                        <worksheet name='Tests conducted'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Latitude (generated)]' field-type='quantitative' max='8823523.4427749086' min='-2481798.4556342047' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[Longitude (generated)]' field-type='quantitative' max='17448367.214000005' min='1673094.734982304' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='We notice that Qatar has highst per capita gdp and their ppulation is also less hence they have got vaccinated almost.' captured-sheet='Vaccinaton and GDP per capita' id='9' />
                    <story-point caption='R0 &lt; 1: Virus will die out.                                                            R0 = 1.0 virus will sustain for long period                    R0  &gt; It will spread [India&apos;s current situation verifies our logic]' captured-sheet='Average reproduction rate vs toatl cases' id='10' />
                    <story-point caption='Japanese people have highest life expectancy in Asian continent' captured-sheet='Life expexctancy ' id='11' />
                    <story-point caption='A higher score indicares a stricter government response. Initially the stringency resposes were very high. As soon as restrictions where eased, the number of covid deaths have shown an increase.' captured-sheet='stringic index' id='12'>
                      <capturedDeltas>
                        <worksheet name='stringic index'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]' field-type='quantitative' max='74523100' min='-25850790' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[avg:stringency_index:qk]' field-type='quantitative' max='107.64478980040954' min='-85.406576378293465' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Thank you' captured-sheet='' id='13' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' h='29765' hidden='true' id='9' story-point-id='13' w='58818' x='19636' y='43294'>
          <formatted-text>
            <run fontname='Wide Latin' fontsize='28'>Thank you</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{CADC1D36-498D-473A-BCAC-3EECAF6F350B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' name='Introduction'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1FE1D051-93BF-4ED4-B2C7-0191F3D46522}' />
    </window>
    <window class='worksheet' name='overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FC3662AB-B112-4D9F-B578-DA92A6E64241}' />
    </window>
    <window class='worksheet' name='positive rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:positive_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FC6A22D6-676B-4D06-B739-05FF086AAC7D}' />
    </window>
    <window class='worksheet' name='Tests conducted'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_tests:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{688B2F0E-7139-4CD7-8959-3DBE798F9288}' />
    </window>
    <window class='worksheet' name='total deaths in asian continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:Months:qk]</field>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D0617E2D-53B1-4A26-821D-1D9C4EC021A8}' />
    </window>
    <window class='worksheet' name='Vaccinaton and GDP per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:gdp_per_capita:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E2C81FEC-2F1F-4674-A188-136535F83498}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1' tab-color='#17927d'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{13C8BC3C-6BF3-484C-ADF3-2842C7F2FB3D}' />
    </window>
    <window class='worksheet' name='Average reproduction rate vs toatl cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7B75E14-B43D-4C0B-B6F3-B37FC945AC8D}' />
    </window>
    <window class='worksheet' name='Life expexctancy '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[sum:life_expectancy:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{70AC9CF5-AF0C-47C7-9760-E8A678BB03CE}' />
    </window>
    <window class='worksheet' name='stringic index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u1bu7t1492sgi17qndkh1pxdqw6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79DC847E-AC6E-44D7-9A27-6F18F524EC78}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average reproduction rate vs toatl cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Life expexctancy ' width='192'>
      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
      CNY0/x88SNFotIDzwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tests conducted' width='192'>
      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
      QPwf5z4i18OFQowAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vaccinaton and GDP per capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='overview' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='positive rate' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='stringic index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total deaths in asian continent' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
